name: Go Tests

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ '**' ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        go-version: [ '1.21', '1.22' ]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true
    
    - name: Download dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Build
      run: go build -v ./...
    
    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...
    
    - name: Generate coverage report
      if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.22'
      run: |
        go tool cover -func=coverage.out
        go tool cover -html=coverage.out -o coverage.html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.22'
      with:
        files: ./coverage.out
        flags: unittests
        fail_ci_if_error: false
    
    - name: Security audit
      run: |
        echo "Running security audit..."
        go install github.com/sonatypecommunity/nancy@latest
        go list -json -m all | nancy sleuth || true
        echo "Checking for outdated modules..."
        go list -u -m all || true

