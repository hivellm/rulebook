name: Publish to crates.io

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to publish (e.g., v1.0.0)'
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
      with:
        ref: ${{ github.event.inputs.tag || github.ref }}
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
    
    - name: Verify version matches tag
      run: |
        TAG="${{ github.event.inputs.tag || github.ref_name }}"
        VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].version')
        TAG_VERSION="${TAG#v}"
        if [ "$VERSION" != "$TAG_VERSION" ]; then
          echo "Error: Cargo.toml version ($VERSION) does not match tag ($TAG_VERSION)"
          exit 1
        fi
        echo "Version check passed: $VERSION"
    
    - name: Run tests
      run: cargo test --all-features
    
    - name: Run clippy
      run: cargo clippy --all-features -- -D warnings
    
    - name: Build release
      run: cargo build --release --all-features
    
    - name: Verify package contents
      run: cargo package --list
    
    - name: Publish to crates.io (dry-run)
      run: cargo publish --dry-run --allow-dirty
    
    - name: Publish to crates.io
      run: cargo publish --token ${{ secrets.CARGO_TOKEN }}
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
    
    - name: Wait for crates.io to update
      run: sleep 30
    
    - name: Verify published version
      run: |
        VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].version')
        PACKAGE=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].name')
        echo "Published $PACKAGE@$VERSION to crates.io"

